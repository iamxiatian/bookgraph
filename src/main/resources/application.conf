akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}


nlp {
  word2vec.modelFile = "./data/model/word2vec.bin"
}

db {
  mysql {
    url = "jdbc:mysql://localhost/crawler?characterEncoding=UTF-8"
    driver = "com.mysql.jdbc.Driver"
    user = "root"
    password = "xiatian"
  }

  mongo {
    url = "mongodb://localhost:27017/goonie"
    splitCollection = false # 是否需要把抓取的数据每天放一个单独的集合
  }

  redis {
    host = "localhost"
    port = 6379
  }

  elasticSearch {
    http.url = "elasticsearch://localhost:9200"
    user = "elastic"
    password = "changeme"
  }

}

# HTTP API Server listening port
http.port = 7000


# 调度机制，如每日发送邮件
scheduler {
  triggerTimes = "1:30 11:30 15:25 21:30 23:15"

  mail.smtp {
    host = "smtp.163.com"
    port = 25
    user = "cnxiatian@163.com"
    password = "ruc_irm_xiatian_pwd"
    auth = true
    startTtls = true
  }

  mail.receivers = "cnxiatian@163.com"

  #是否启用邮件通知，发送最近抓取的报道内容列表，默认为false
  mail.notify = false
}